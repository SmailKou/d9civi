<?php declare(strict_types=1);

/**
 * @file designer makers .module file used to alter some behaviors.
 */

use Drupal\webform\WebformSubmissionInterface;
use Civi\Api4\Group;
use Civi\Api4\GroupContact;

require_once './sites/default/civicrm.settings.php';
require_once 'CRM/Core/Config.php';
$config = CRM_Core_Config::singleton();
require_once 'api/api.php';

/**
 * Implements hook_webform_submission_presave().
 */
function designermakers_webform_submission_presave(WebformSubmissionInterface $webform_submission) {
  // Check if the submission is for the designer maker profile webform
  if ($webform_submission->getWebform()->id() == 'designer_maker_profile') {
    \Drupal::service('event_dispatcher')->addListener('webform_submission_insert', 'designermakers_webform_submission_insert');
  }
  // Check if the submission is for the designer maker profile webform
  if ($webform_submission->getWebform()->id() == 'add_product') {
    \Drupal::service('event_dispatcher')->addListener('webform_submission_insert', 'designermakers_webform_submission_insert');
  }
}

/**
 * Custom function to add individuals to the "Designer Makers" group after submission.
 */
function designermakers_webform_submission_insert(WebformSubmissionInterface $webform_submission) {
  // Check if the submission is from the "Designer Maker Product" webform
  if ($webform_submission->getWebform()->id() == 'add_product') {
    try {
      // Get the product submission service
      $product_submission_service = \Drupal::service('designermakers.product_submission_service');
      // Call the service method to handle the submission
      $product_submission_service->submitProduct($webform_submission);
      \Drupal::messenger()->addMessage('Product associated well to its Designer Maker! ');
    } catch (Exception $e) {
      \Drupal::messenger()->addMessage("Error occured : @message", ['@message' => $e->getMessage()]);
    }
  }

  // Check if the submission is for the specific webform
  if ($webform_submission->getWebform()->id() == 'designer_maker_profile') {
    // Get the submission data
    $data = $webform_submission->getData();

    // Retrieve the CiviCRM contact ID of the newly created individual
    if (!empty($data['civicrm_1_contact_1_contact_contact_id'])) {
      $contact_id = $data['civicrm_1_contact_1_contact_contact_id'];

      // Retrieve the "Designer Makers" group ID
      $group = Group::get()
        ->addWhere('title', '=', 'Designer Makers')
        ->execute();

      if ($group->count() > 0) {
        $group_id = $group[0]['id'];

        // Add the contact to the "Designer Makers" group
        GroupContact::create()
          ->addValue('contact_id', $contact_id)
          ->addValue('group_id', $group_id)
          ->addValue('status', 'Added')
          ->execute();

        \Drupal::messenger()->addMessage('The individual has been added to the Designer Makers group.');
      } else {
        \Drupal::logger('designermakers')->error('Designer Makers group not found.');
        \Drupal::messenger()->addMessage('Error: Designer Makers group not found.', 'error');
      }
    } else {
      \Drupal::logger('designermakers')->error('No contact ID found in the form submission.');
      \Drupal::messenger()->addMessage('Error: No contact ID found in the form submission.', 'error');
    }
  }
}

/**
 * Implements hook_install().
 */
function designermakers_install() {
  // Dropping useless index
  try {
    $connection = \Drupal::database();
    $connection->query('ALTER TABLE civicrm_value_product_7 DROP INDEX unique_entity_id');
  } catch (Exception $exception) {
    Drupal::logger('designermakers')->error('Error occured during database update: @error', ['@error' => $exception->getMessage()]);
  }
}
